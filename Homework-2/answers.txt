For a 16 bit word with 6 bits for an opcode
How many different instructions could I fit into the instruction set?
2^6 = 16 instructions
What is the largest number that I could use as data?
(2^10)-1 = 1023

For the following memory space, what would it look like after executing the assembly code below:
  Address	Contents
  10		1
  11		4
  12		5
  13		112
  14		7

  LOAD 14 - loads the contents of the address 14, so the value its 7
  ADD (12) - then it add 7 to the contents of the address 12, whichs value is 5, so the sum its 12
  STORE 12 - then it stores the sum, which its 12, in the adress 12
  *this can also be written as add $14, $12

Memory space after:
  Address	Contents
  10		1
  11		4
  12		12
  13		112
  14		7

Create a similar function swapl that uses long integers instead
What's the difference in the assembly code?

The difference is the mov instruction, in the swapl some move instructions are written movl and in swap all 
instructions are movq, which means that there are movements of data that occupy more memory space in swapl 
because of the data type that are being used. 